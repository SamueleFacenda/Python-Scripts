from decimal import Decimal, getcontext

getcontext().prec = 1000

n= Decimal('146652948863107767915515696389262268647958080423363432809510595078682568112085519929016552006340132750260244391442650419716209388476887752518821948643355769332931080957723170703642823372471212059667069985712741031890734368079274545006791082030796999444978356751235369237849185209094420930556569139123564127723')
e= 65537
ct= Decimal('29866550050067643692473619455049192140190479758069897252295829267390344690107747214634468574079853475351608563312052986143110232253489826549882185837122231695139253296376749571108533659993018491393797757794110130200246559684585596096579385116077972392131805016636133672522654864012092864459984453971252224283')

def fermatFactorization(n):
    a = Decimal(n).sqrt().to_integral_value()
    b2 = a*a - n
    b = b2.sqrt()
    while b*b != b2:
        a += 1
        b2 = a*a - n
        b = b2.sqrt()
    return a+b, a-b

p,q = fermatFactorization(n)
print(p)
print(q)

phi = (p-1)*(q-1)
d = pow(e, -1, int(phi))
plain = pow(ct, d, n)
plain = int(plain)
print(plain.to_bytes((plain.bit_length() + 7) // 8, 'big'))